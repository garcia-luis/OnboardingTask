# This template shows the functions used in the Process_Longitudinal.py and
# Process_NonLongitudinal.py files

# Import packages
print("Importing python packages")
import neuroblu as nb
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from functools import reduce

# Define percentage function
print("Creating percentage_available function")
def percentage_available (data_cohort, built_cohort):
  
  # Percentage is calculated as the available data for patients / total patients *100
  per_available = len(data_cohort['person_id'].unique()) / len(built_cohort) *100
  percentage = round(per_available, 2)
  
  return percentage

# This template shows the functions used in the Process_Longitudinal.py and
# Process_NonLongitudinal.py files

# Import packages
print("Importing python packages")
import neuroblu as nb
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from functools import reduce

# Define percentage function
print("Creating percentage_available function")
def percentage_available (data_cohort, built_cohort):
  
  # Percentage is calculated as the available data for patients / total patients *100
  per_available = len(data_cohort['person_id'].unique()) / len(built_cohort) *100
  percentage = round(per_available, 2)
  
  return percentage

# Define horizontal barplot function using percentages for Longitudinal or NonUnique data
print("Creating hbarplotspercentage_longitudinal function")
def hbarplotspercentage_longitudinal (data):
  # Figure
  plt.figure(figsize=(7,7))
  plt.barh(data['Variables'], data['Percentage_available_data'], color = "royalblue") 
  # Plot and axis titles
  plt.title('Available data', loc = 'center')
  plt.ylabel('Variables')
  plt.xlabel('Percentage of patients (%)')
  # Customize frame
  plt.gca().spines['right'].set_visible(False)
  plt.gca().spines['top'].set_visible(False)
  # Save plot
  plotfigure = plt.savefig('Percentage_Available_Data_Longitudinal.png')
  
  return plotfigure

# Define horizontal barplot function using percentages for Non Longitudinal data
print("Creating hbarplotspercentage_nonlongitudinal function")
def hbarplotspercentage_nonlongitudinal (data):
  # Figure
  plt.figure(figsize=(7,7))
  plt.barh(data['Variables'], data['Percentage_available_data'], color = "royalblue") 
  # Plot and axis titles
  plt.title('Available data', loc = 'center')
  plt.ylabel('Variables')
  plt.xlabel('Percentage of patients (%)')
  # Customize frame
  plt.gca().spines['right'].set_visible(False)
  plt.gca().spines['top'].set_visible(False)
  # Save plot
  plotfigure = plt.savefig('Percentage_Available_Data_NonLongitudinal.png')
  
  return plotfigure
